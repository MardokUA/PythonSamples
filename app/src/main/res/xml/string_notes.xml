<?xml version="1.0" encoding="UTF-8"?>
<data>
<item>
<title>Cтроки - упорядоченные последовательности символов, используемые для хранения и представления текстовой информации
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>Cтроки относятся к категории неизменяемых последовательностей, в том смысле, что символы, которые они содержат, имеют определенный порядок следования слева направо и сами строки невозможно изменить.
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Пустые строки записываются как пара кавычек (или апострофов), между которыми ничего нет
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
В Python 3.х существует три строковых типа: str – для представления текста Юникода (содержащего символы в кодировке ASCII и символы в других кодировках), bytes – для представления двоичных данных (включая кодированный текст) и bytearray – изменяемый вариант типа bytes
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Кавычки и апострофы, окружающие строки, в языке Python являются взаимозаменяемыми. То есть строковые литералы можно заключать как в апострофы, так и в кавычки – эти две формы представления строк ничем не отличаются, и обе они возвращают объект того же самого типа:
str =[‘shrubbery’, “shrubbery”]
print(str)
[‘shrubbery’, ‘shrubbery’]
str1,str2='knight""s', ""knight's""
print(str1+' '+str2)
knight”s  knight’s
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Python автоматически объединяет последовательности строковых литералов внутри выражения 
# Неявная конкатенация
title = ""Meaning "" 'of’' "" Life"" 
print(title)
Meaning of Life"
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Если добавить запятые между этими строками, будет получен кортеж, а не строка
str=""first"",""second""
print(str)
('first', 'second')"
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
B языке Python нет символа,который служил бы признаком завершения строки
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Если требуется работать с файлами, содержащими двоичные данные, главное отличие в работе с ними заключается в том, что открывать их нужно в режиме двоичного доступа (добавляя к флагу режима открытия флаг b, например "rb", "wb")
</title>
<content> 
</content>
</item> 
<item>
<title>
Если перед кавычкой, открывающей строку, стоит символ r (в верхнем или в нижнем регистре), он отключает механизм экранирования.
myfile = open(r'C:\new\text.dat', 'w')
или
myfile = open('C:\\new\\text.dat', 'w')
</title>
<content> 
</content>
<print>
</print>
</item> 
</data>