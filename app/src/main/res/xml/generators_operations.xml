<?xml version="1.0" encoding="UTF-8"?>
<data>
<item>
<title>Генераторы словарей</title>
<content> 
D = {k: v for (k, v) in zip(['a', 'b', 'c'], [1, 2, 3])}
print(D)
D = {x: x ** 2 for x in range(1, 5)} 
print(D)
D = {c: c * 4 for c in 'SPAM'}
print(D)
D = {c.lower(): c + '!' for c in ['SPAM', 'EGGS', 'HAM']}
print(D)
</content>
<print>
{'a': 1, 'b': 2, 'c': 3}
{1: 1, 2: 4, 3: 9, 4: 16}
{'S': 'SSSS', 'P': 'PPPP', 'A': 'AAAA', 'M': 'MMMM'}
{'spam': 'SPAM!', 'eggs': 'EGGS!', 'ham': 'HAM!'}
</print>
</item> 
<item>
<title>Генераторы списков</title>
<content> 
for x in [1, 2, 3, 4]: print(x ** 2, end=' ')
print()
for x in (1, 2, 3, 4): print(x ** 3, end=' ')
print()
for x in 'spam': print(x * 2, end=' ')
print()
res = [x + y for x in [0, 1, 2] for y in [100, 200, 300]]
print(res)
</content>
<print>
1 4 9 16 
1 8 27 64 
ss pp aa mm 
[100, 200, 300, 101, 201, 301, 102, 202, 302]
</print>
</item> 
<item>
<title>Расширенный синтаксис генераторов списков</title>
<content> 
'''
Отобрать только строки, начинающиеся с символа s в ранее созданном файле
'''
lines = [line.rstrip() for line in open('data.txt') if line[0] == 's']
print(lines)
l = [x + y for x in 'abc' for y in 'lmn']
print(l)
d = {ix: line for (ix, line) in enumerate(open('data.txt')) if(len(line) > 5)}
print(d)
a = [i for i in range(30,250) if i%30 == 0 or i%31 == 0]
print(a)
</content>
<print>
['spam...']
['al', 'am', 'an', 'bl', 'bm', 'bn', 'cl', 'cm', 'cn']
{0: 'spam...\n', 1: '99...\n', 2: "['eggs']|..\n"}
[30, 31, 60, 62, 90, 93, 120, 124, 150, 155, 180, 186, 210, 217, 240, 248]
</print>
</item> 
<item>
<title>Сложные примеры генераторов</title>
<content> 
l = [(x, y) for x in range(5) if x % 2 == 0 for y in range(5) if y % 2 == 1]
print(l)
# аналог,используя циклы
res = []
for x in range(5):
    if x % 2 == 0:
        for y in range(5):
            if y % 2 == 1:
                res.append((x, y))
				
print(res)
l = range(-5,5)
s = ['even' if x %2 == 0 else 'odd' for x in l ]
print(s)
</content>
<print>
[(0, 1), (0, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
[(0, 1), (0, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
['odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even']
</print>
</item> 
<item>
<title>Сложные пример генераторов(2)</title>
<content> 
M = [[1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]]
N = [[2, 2, 2],
    [3, 3, 3],
    [4, 4, 4]]
l = [M[row][col] * N[row][col] for row in range(3) for col in range(3)]
print(l)
l =  [[M[row][col] * N[row][col] for col in range(3)] for row in range(3)]
print(l)
# Используя циклы
res = []
for row in range(3):
    tmp = []
    for col in range(3):
        tmp.append(M[row][col] * N[row][col])
    res.append(tmp)
	
print(res)
</content>
<print>
[2, 4, 6, 12, 15, 18, 28, 32, 36]
[[2, 4, 6], [12, 15, 18], [28, 32, 36]]
[[2, 4, 6], [12, 15, 18], [28, 32, 36]]
</print>
</item> 
</data>