<?xml version="1.0" encoding="UTF-8"?>
<data>
<item>
<title>
Списки относятся к категории изменяемых объектов, поэтому они поддерживают операции, которые изменяют сам список непосредственно. То есть все изменяются сам список объектов и не создается новую копию</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Упорядоченные коллекции объектов произвольных типов.
C функциональной точки зрения, списки – это лишь место, в котором собраны другие объекты, поэтому их можно также рассматривать как группы. Кроме того, списки обеспечивают позиционное упорядочение элементов слева направо (то есть они являются последовательностями)
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Доступ к элементам по смещению.
Так же как и в случае со строками, вы можете использовать операцию индексирования для извлечения отдельных объектов из списка по их смещениям. Поскольку элементы в списках упорядочены по их местоположению, можно также выполнять такие действия, как извлечение срезов и конкатенация.</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Переменная длина,гетерогенность и произвольное число уровней вложенности.
В отличие от строк, списки могут увеличиваться и уменьшаться непосредственно (их длина может изменяться) и могут содержать не только односимвольные строки, но и любые другие объекты (списки гетерогенны). Списки могут содержать другие сложные объекты и поддерживают возможность создания произвольного числа уровней вложенности, поэтому имеется возможность создавать списки списков из списков и так далее.</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Относятся к категории изменяемых объектов.
В терминах категорий типов списки могут изменяться непосредственно (являются изменяемыми объектами) и поддерживают все операции над последовательностями, которые поддерживаются и строками, такие как индексирование, извлечение срезов и конкатенация. Операции над последовательностями одинаковым образом работают как в случае списков, так и в случае строк, единственное отличие – при применении операций над последовательностями (таких как конкатенация и извлечение среза) к спискам возвращается новый список, а не новая строка. Кроме того, т. к. списки являются изменяемыми объектами, они поддерживают также операции, которые не поддерживаются строками (такие как операции удаления и присваивания по индексам, изменяющие список непосредственно).
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Массивы ссылок на объекты.
Формально списки в языке Python могут содержать ноль или более ссылок на другие объекты. Списки чем-то напоминают массивы указателей (адресов). Извлечение элемента из списка в языке Python выполняется так же быстро, как извлечение элемента массива в языке C. В действительности списки – это самые настоящие массивы языка C, реализованные в интерпретаторе Python, а не связанные структуры данных. Как мы узнали в главе 6, всякий раз, когда используется ссылка на объект, интерпретатор разыменовывает ее, поэтому ваши программы всегда будут иметь дело только с объектами. Всякий раз, когда выполняется присваивание объекта элементу какой-либо структуры или имени переменной, интерпретатор Python сохраняет ссылку на этот объект, а не его копию (за исключением, когда явно запрашивается выполнение операции копирования).
</title>
<content> 
</content>
<print>
</print>
</item>
<item>
<title>
Словари – это отображения, а не последовательности. Вследствие того, что словари не предусматривают никакого упорядочения элементов, такие операции, как конкатенация (упорядоченное объединение) и извлечение среза (извлечение непрерывного блока элементов), неприменимы.
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title>
Ключи можно создавать при определении словаря в виде литерала (в этом случае они встраиваются непосредственно в литерал) или при присваивании значения новому ключу существующего объекта словаря.
</title>
<content> 
</content>
<print>
</print>
</item> 
<item>
<title> 
В качестве ключей могут использоваться любые другие неизменяемые объекты (то есть не списки). Например, в качестве ключей допустимо использовать целые числа, что превращает словарь в подобие списка (как минимум, в смысле индексирования). В качестве ключей можно также использовать кортежи, что позволяет создавать составные ключи.Экземпляры классов также могут играть роль ключей при условии, что они поддерживают определенные методы, которые сообщат интерпретатору, что он имеет дело с неизменяемым объектом, в противном случае они будут бесполезны, если рассматривать их как фиксированные ключи.
</title>
<content> 
</content>
<print>
</print>
</item> 
</data>